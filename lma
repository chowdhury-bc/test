"""
The function provides several location-based services such as fetching coordinates, 
current time, and weather information for a given place. It relies on external services 
like Amazon Location Service and OpenWeatherMap API.
"""

import json
# from coordinates_finder import CoordinatesFinder
# from time_finder import TimeFinder
# from weather_finder import WeatherFinder

def lambda_handler(event, context):
    print(event)

    agent = event['agent']
    actionGroup = event['actionGroup']
    function = event['function']
    parameters = event.get('parameters',[])

    def get_time():
        return datetime.datetime.utcnow().strftime('%H:%M:%S')

    def mul(no1,no2):
        return no1 * no2

    params = {param['name'].lower():int(param['value']) for param in parameters if param['type']=='number'}



    if function == "mul":
        no1=params.get['no1']
        no2=params.get['no2']


        if no1 is not None and no2 is not None:
            try:
                no1=int(no1)
                no2=int(no2)
                result = mul(no1,no2)
                result_text="The result of adding {} and {} is {}".format(no1,no2,result)
            except ValueError:
                result_text = "Error:Non-integer parameters"
        else:
            result_text = "Error: Missing one or more require param"


        responseBody= {
            "TEXT" : {
                "body":result_text
            }

        }

    elif function == "gettime":
        result=get_time()
        result_text="The time is {}".format(result)

        responseBody={
            "TEXT":{
                "body":"The function {} was called".format(function)
            }

        }

    else:
        responseBody={
            "TEXT":{
                "body":"this is it"
            }
        }


    action_response = {
        'actionGroup':actionGroup,
        'function':function,
        'functionResponse':{
            'responseBody':responseBody
        }
    }





