#!/bin/bash

# Function to convert UTC to EST timestamp
convert_to_est() {
    local utc_time="$1"
    TZ="America/New_York" date -d "$utc_time" "+%Y-%m-%d %H:%M:%S %Z"
}

# Function to rotate predictions file
manage_predictions_file() {
    local predictions_file="/var/snap/amazon-ssm-agent/7993/testpredictions/predictions.csv"
    local max_lines=1000  # Keep last 1000 predictions (adjust as needed)
    local temp_file="/tmp/temp_predictions.csv"
    
    if [ -f "$predictions_file" ]; then
        # Get the header line
        head -n 1 "$predictions_file" > "$temp_file"
        
        # Append the last max_lines-1 (excluding header) to temp file
        tail -n "$max_lines" "$predictions_file" >> "$temp_file"
        
        # Replace original with rotated file
        mv "$temp_file" "$predictions_file"
        
        # Log the rotation
        echo "Predictions file rotated at $(TZ="America/New_York" date "+%Y-%m-%d %H:%M:%S %Z")"
        echo "Current predictions file size: $(wc -l < "$predictions_file") lines"
    fi
}

# Function to archive old predictions
archive_predictions() {
    local predictions_file="/var/snap/amazon-ssm-agent/7993/testpredictions/predictions.csv"
    local archive_dir="/var/snap/amazon-ssm-agent/7993/testpredictions/archives"
    local current_date=$(date +"%Y%m")
    
    # Create archives directory if it doesn't exist
    mkdir -p "$archive_dir"
    
    # If it's the first day of the month and predictions file exists
    if [ "$(date +%d)" = "01" ] && [ -f "$predictions_file" ]; then
        # Create monthly archive
        local archive_file="$archive_dir/predictions_${current_date}.csv"
        if [ ! -f "$archive_file" ]; then
            cp "$predictions_file" "$archive_file"
            # Compress the archive
            gzip "$archive_file"
            # Upload archive to S3
            /usr/local/bin/aws s3 cp "${archive_file}.gz" "s3://rise-collab/archives/"
            echo "Monthly archive created: ${archive_file}.gz"
            # Clear the predictions file but keep the header
            head -n 1 "$predictions_file" > "$predictions_file.tmp"
            mv "$predictions_file.tmp" "$predictions_file"
        fi
    fi
}

# Rest of your existing script...
[Previous script content until before appending to predictions.csv]

# Manage predictions file before appending new data
manage_predictions_file

# Append new predictions to predictions.csv
if [ -f "/var/snap/amazon-ssm-agent/7993/inference_predictions.csv" ]; then
    tail -n +2 /var/snap/amazon-ssm-agent/7993/inference_predictions.csv >> /var/snap/amazon-ssm-agent/7993/testpredictions/predictions.csv
else
    echo "Warning: inference_predictions.csv not found"
fi

# Archive predictions if needed
archive_predictions

# Copy predictions to s3
/usr/local/bin/aws s3 cp /var/snap/amazon-ssm-agent/7993/testpredictions/predictions.csv s3://rise-collab/

# Log file sizes
echo "============== File Size Information =============="
echo "Current predictions file size: $(wc -l < /var/snap/amazon-ssm-agent/7993/testpredictions/predictions.csv) lines"
echo "Current predictions file size (bytes): $(ls -lh /var/snap/amazon-ssm-agent/7993/testpredictions/predictions.csv | awk '{print $5}')"
echo "==============================================="

[Rest of your existing script...]
